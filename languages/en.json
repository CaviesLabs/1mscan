{
  "common": {
    "evm": "EVM",
    "native": "Native",
    "your": "Your"
  },
  "wallet": {
    "connected_to": "Connected to",
    "evm_wallet": "EVM wallet",
    "native_wallet": "Native wallet",
    "not_connected": "Not connected",
    "disconnect": "Disconnect",
    "connect_wallet": "Connect wallet",
    "switch_to": "Switch to",
    "wallet": "wallet"
  },
  "header": {
    "checkpoint": "Checkpoint",
    "sei_price": "SEI Price",
    "gas": "Gas",
    "nsei": "nsei",
    "1mscan": "1Mscan",
    "home": "Home",
    "gas_calculation_based_on_latest_1000_blocks": "The gas calculation is based on latest 1,000 blocks",
    "slow": "Slow",
    "average": "Average",
    "fast": "Fast",
    "search_bar": {
      "enter_keyword_for_searching": "Enter keyword for searching",
      "recent": "Recent",
      "keyword_not_found": "Keyword not found",
      "please_check_your_keyword": "Please check your keyword",
      "clear_all": "Clear all"
    },
    "blockchain": {
      "main_link": "Blockchain",
      "transactions": "Transactions",
      "blocks": "Blocks",
      "top_accounts": "Top Accounts",
      "validators": "Validators",
      "evm_verified_contracts": "EVM Verified Contracts"
    },
    "assets": {
      "main_link": "Assets",
      "tokens": "Tokens",
      "nfts": "NFTs"
    },
    "tools": {
      "main_link": "Tools",
      "wallet_profile": "Wallet profile",
      "profile_checker": "Profile checker"
    }
  },
  "status": {
    "success": "Success",
    "error": "Error",
    "pending": "Pending",
    "loading": "Loading",
    "ok": "OK",
    "passed": "Passed",
    "failed": "Failed",
    "voting": "Voting",
    "voted": "Voted",
    "not_voted": "Not voted",
    "did_not_vote": "Did not vote",
    "deposit_period": "Deposit period",
    "voting_period": "Voting period",
    "deposit_failed": "Deposit failed",
    "rejected": "Rejected",
    "unspecified": "Unspecified"
  },
  "utils": {
    "view_all": "View all",
    "sei_price": "SEI price",
    "evm": "EVM",
    "native_cosmos": "Native Cosmos",
    "sei": "SEI",
    "fee": "Fee",
    "copied": "Copied",
    "copy_to_clipboard": "Copy to clipboard",
    "min": "min",
    "mins": "mins",
    "sec": "sec",
    "secs": "secs",
    "hr": "hr",
    "hrs": "hrs",
    "ago": "ago",
    "days": "days",
    "last_sync": "Last sync",
    "date": "Date",
    "show": "Show",
    "hide": "Hide",
    "first": "First",
    "total": "Total",
    "item": "item",
    "found": "found",
    "all": "All",
    "24h": "24h",
    "price": "Price",
    "no_data_found": "No data found",
    "tx_day": "Tx/day",
    "market_cap": "Market cap",
    "copy": "Copy"
  },
  "footer": {
    "powered_by_1matrix_blockchain": "Powered by 1Matrix Blockchain",
    "1mscan_is_a_block_explorer_and_analytics_platform_for_1matrix": "1Mscan is a Block Explorer and Analytics Platform for 1Matrix",
    "company": "Company",
    "about_us": "About us",
    "brand_assets": "Brand Assets",
    "contact_us": "Contact us",
    "terms_and_privacy": "Terms & Privacy",
    "community": "Community",
    "documents": "Documents",
    "report_issue": "Report issue",
    "add_sei_to_wallets": "Add SEI to wallets",
    "donations": "Donations",
    "terms": "Terms",
    "privacy": "Privacy",
    "failed_to_add_or_switch_chain": "Failed to add or switch chain",
    "compass_is_already_installed": "Compass is already installed"
  },
  "title": {
    "DEFAULT_TEMPLATE": "1Mscan | Leading Sei Blockchain Explorer & Defi hub",
    "/txs": "Sei Network Transactions Information | 1Mscan",
    "/tx/[hash]": "Sei Network Transaction Details | 1Mscan",
    "/blocks": "Sei Network Blocks | 1Mscan",
    "/block/[height_or_hash]": "Sei Network Block #{{height_or_hash}} | 1Mscan",
    "/accounts": "Top Accounts by SEI balance | 1Mscan",
    "/address/[hash]": "Address details | Address {{hash}} | 1Mscan",
    "/verified-contracts": "SEI Network Verified Contracts | 1Mscan",
    "/address/[hash]/contract-verification": "Verify & Publish Contract Source Code for {{hash}} | 1Mscan",
    "/token/[...slug]": "{{#if is_nft}}\n{{#if is_instance}}\nCollection{{#if token_name}} {{token_name}}{{/if}}{{#if token_symbol}} ({{token_symbol}}){{/if}} Tracker #{{token_id}} | 1Mscan\n{{else}}\nCollection{{#if token_name}} {{token_name}}{{/if}}{{#if token_symbol}} ({{token_symbol}}){{/if}} Tracker | 1Mscan\n{{/if}}\n{{else}}\nToken{{#if token_name}} {{token_name}}{{/if}}{{#if token_symbol}} ({{token_symbol}}){{/if}} Tracker | 1Mscan\n{{/if}}",
    "/csv-export": "Export data to CSV | 1Mscan",
    "/404": "Page Not Found - 404 page | 1Mscan",
    "/validators": "Sei Network Validators Stats & Analysis | 1Mscan",
    "/validator/[hash]": "1Mscan | Sei Network Validator {{hash}}",
    "/parameters": "Sei Network Parameters | 1Mscan",
    "/contract-verification": "Verify & Publish EVM Contract Source Code | 1Mscan",
    "/tokens": "Fungible Tokens Tracker | 1Mscan",
    "/nfts": "Non Fungible Tokens (NFTs) Tracker | 1Mscan",
    "/hybrids": "Hybrid Tokens Tracker | 1Mscan",
    "/tool/wallet-profile": "SEI Wallet Profile - View Details | 1Mscan",
    "/tool/profile-checker": "SEI Profile Checker - Token Holdings | 1Mscan",
    "/about": "About 1Mscan"
  },
  "description": {
    "DEFAULT_TEMPLATE": "Leading Sei blockchain explorer for both EVM and Cosmos environments",
    "/token/[...slug]": "{{#if is_nft}}\n{{#if is_instance}}\nCollection{{#if token_name}} {{token_name}}{{/if}}{{#if token_symbol}} ({{token_symbol}}){{/if}} Tracker #{{token_id}} | 1Mscan\n{{else}}\nCollection{{#if token_name}} {{token_name}}{{/if}}{{#if token_symbol}} ({{token_symbol}}){{/if}} Tracker | 1Mscan\n{{/if}}\n{{else}}\nToken{{#if token_name}} {{token_name}}{{/if}}{{#if token_symbol}} ({{token_symbol}}){{/if}} Tracker | 1Mscan\n{{/if}}",
    "/validators": "Explore Sei Network validators with real-time analytics on 1Mscan. Monitor validator performance, commission, staking metrics, and network health",
    "/validator/[hash]": "Explore Sei Network validator details with real-time analytics on 1Mscan. Monitor validator performance, commission, staking metrics, and network health",
    "/txs": "Track confirmed transactions on Sei Network across both EVM and Cosmos environments. Monitor token transfers, smart contract interactions in real-time",
    "/tx/[hash]": "Sei Network transaction details: status, confirmations, gas fees, token transfers, associated",
    "/blocks": "Monitor Sei Network blocks in real-time: block height, validator activity, transaction counts, gas usage, and block rewards",
    "/block/[height_or_hash]": "Sei Network Block Height {{height_or_hash}}. The timestamp, size, block reward, difficulty, gas used and the transactions in the block are detailed on 1Mscan",
    "/accounts": "Monitor leading Sei Network wallets with combined native and EVM on the same account. Track top holders and balance distribution on 1Mscan",
    "/address/[hash]": "View the transactions, token transfers, Token holdings, associated address and other data for address {{hash}} on SeiTrace",
    "/verified-contracts": "Explore verified EVM smart contracts on Sei blockchain through 1Mscan. Each contract's source code is verified to match deployed bytecode for security",
    "/contract-verification": "Verify and publish Solidity smart contract source code on Sei Network with 1Mscan's contract verification tool. Simple and secure validation for EVM contract deployments",
    "/address/[hash]/contract-verification": "Verify and publish Solidity smart contract source code on Sei Network with 1Mscan's contract verification tool. Simple and secure validation for EVM contract deployments",
    "/parameters": "Explore current Sei Network protocol parameters and chain configurations. Track governance settings and network parameters for {{chain}} through 1Mscan's parameter dashboard",
    "/tokens": "Track all tokens (ERC-20, CW-20, Native, IBC, Factory) on Sei blockchain with real-time prices, market caps, holder counts, and smart contract details",
    "/nfts": "Track all NFTs (ERC-721, CW-721, ERC-1155) on Sei blockchain with real-time total items, holder counts",
    "/hybrids": "Track tokens ERC-404 on Sei blockchain with real-time prices, market caps, holder counts, and smart contract details",
    "/tool/wallet-profile": "Explore wallet details with 1Mscan's SEI Wallet Profile. Track transactions and view profiles easily on SEI blockchain",
    "/tool/profile-checker": "See token holdings with 1Mscan's SEI Profile Checker. Check wallet tokens on SEI blockchain fast and easily",
    "/about": "Built and launched by the Cavies team, 1Mscan provides a deep dive into real-time insights as the first comprehensive explorer for the Sei Network"
  },
  "main_homepage": {
    "top_bar": {
      "1matrix_blockchain_explorer": "1Matrix Blockchain Explorer",
      "average_block_time": "Average block time",
      "total_transactions": "Total transactions",
      "gas_tracker": "Gas Tracker",
      "wallet_addresses": "Wallet addresses",
      "search_by_address_txn_hash_block_token_nft_collection": "Search by Address / Txn Hash / Block / Token / NFT collection"
    },
    "latest_blocks_section": {
      "latest_blocks": "Latest blocks",
      "allocated_validators": "Allocated validators",
      "mins_ago": "mins ago",
      "validator": "Validator",
      "power": "Power",
      "reward": "Reward"
    },
    "overview_chart": {
      "daily_transactions": "Daily transactions",
      "market_cap": "Market cap",
      "market_data_powered_by_coingecko_api": "Market data is powered by Coingecko API"
    },
    "latest_transactions_section": {
      "latest_transactions": "Latest transactions",
      "evm": "EVM",
      "native_cosmos": "Native Cosmos",
      "sei": "SEI",
      "fee": "Fee",
      "mins_ago": "mins ago"
    },
    "validators_section": {
      "validators": "Validators",
      "active_validators": "Active Validators",
      "active": "Active",
      "bonded_tokens": "Bonded Tokens",
      "avg_commission": "Avg Commission",
      "block_time": "Block Time",
      "top_validators_by_voting_power": "Top Validators by Voting Power",
      "1matrix_foundation": "1Matrix Foundation",
      "commission": "Commission",
      "uptime": "Uptime",
      "crypto_innovators": "Crypto Innovators",
      "ventures": "Ventures",
      "blockchain_alliance": "Blockchain Alliance"
    }
  },
  "transactions_page": {
    "transactions": "Transactions",
    "completed_txns": "Completed txns",
    "total_txns": "Total txns",
    "evm": "EVM",
    "native_cosmos": "Native Cosmos",
    "first": "First",
    "trx_hash": "Trx hash",
    "status_header": "Status",
    "type_and_method_header": "Type & Method",
    "block": "Block",
    "from_to": "From/To",
    "value_sei": "Value SEI",
    "fee_sei": "Fee SEI",
    "secs_ago": "secs ago",
    "mins_ago": "mins ago",
    "contract_execution_completed": "Contract execution completed",
    "error_occurred_during_contract_execution": "Error occurred during contract execution",
    "transaction_is_loading": "Transaction is loading",
    "transaction_is_pending": "Transaction is pending",
    "status_values": {
      "success": "Success",
      "failed": "Failed"
    },
    "type_and_method_values": {
      "token_burning": "Token burning",
      "transaction": "Transaction",
      "token_minting": "Token minting",
      "contract_creation": "Contract creation",
      "token_transfer": "Token transfer",
      "contract_call": "Contract call",
      "coin_transfer": "Coin transfer",
      "other_types": "Other types",
      "token_creation": "Token creation"
    },
    "native_cosmos_tab_note": {
      "notes_as_part_of_data_retention_policies": "Notes: As part of data retention policies",
      "transactions_are_pruned_once_they_exceed_a_three_month_threshold": "transactions are pruned once they exceed a three-month threshold"
    }
  },
  "transaction_details_page": {
    "header_elements": {
      "transaction_details": "Transaction details",
      "add_to_watchlist": "Add to watchlist"
    },
    "main_tabs": {
      "details": "Details",
      "token_transfers": "Token transfers",
      "internal_txns": "Internal txns",
      "logs": "Logs",
      "state": "State"
    },
    "this_trx_hash_represents_the_corresponding_transaction_on_another_os_evm_native_cosmos": "This trx hash represents the corresponding transaction on another OS (EVM/Native Cosmos).",
    "evm_details": {
      "context_label": "EVM",
      "this_is_a_devnet_transaction": "This is a {{networkType}} transaction only",
      "details_tab_content": {
        "associated_trx_hash": "Associated trx hash",
        "transaction_hash": "Transaction hash",
        "unique_character_string_txid_assigned_to_every_transaction": "Unique character string (TxID) assigned to every transaction",
        "status_and_method": "Status and method",
        "the_status_of_the_transaction": "The status of the transaction",
        "block": "Block",
        "timestamp": "Timestamp",
        "mins_ago": "mins ago",
        "secs_ago": "secs ago",
        "confirmed_within": "Confirmed within",
        "transaction_action": "Transaction action",
        "swap": "Swap",
        "nft_name": "NFT name",
        "for_price": "for",
        "from": "From",
        "to": "To",
        "interacted_with_contract": "Interacted with contract",
        "tokens_transferred": "Tokens transferred",
        "tokens_burnt": "Tokens burnt",
        "view_all": "View all",
        "value": "Value",
        "the_value_being_transacted_in_sei_and_fiat_value": "The value being transacted in Sei and fiat value",
        "transaction_fee": "Transaction fee",
        "gas_price": "Gas price",
        "gas_usage_limit_by_txn": "Gas usage & limit by txn",
        "gas_fees_sei": "Gas fees (SEI)",
        "burnt_fees": "Burnt fees",
        "max": "Max",
        "priority": "Priority",
        "hide_details": "Hide details",
        "other": "Other",
        "txn_type": "Txn type",
        "nonce": "Nonce",
        "position": "Position",
        "raw": "Raw",
        "hex_value": "Hex",
        "decoded": "Decoded",
        "method_id": "Method ID",
        "call": "Call",
        "name_header": "Name",
        "type_header": "Type",
        "indexed": "Indexed?",
        "data_header": "Data",
        "true_value": "true",
        "false_value": "false",
        "the_sending_party_of_the_transaction": "The sending party of the transaction",
        "the_receiving_party_of_the_transaction": "The receiving party of the transaction",
        "list_of_tokens_nfts_transferred_in_the_transaction": "List of tokens/NFTs transferred in the transaction",
        "coin_transfers": "Coin transfers",
        "list_of_coin_transferred_in_the_transaction": "List of coin transferred in the transaction",
        "tokens_minted": "Tokens minted",
        "list_of_tokens_minted_in_this_transaction": "List of tokens minted in this transaction",
        "list_of_tokens_burnt_in_this_transaction": "List of tokens burnt in this transaction",
        "tokens_created": "Tokens created",
        "list_of_tokens_created_in_the_transaction": "List of tokens created in the transaction",
        "minted": "Minted",
        "for": "for",
        "item": "item",
        "of": "of",
        "revert_reason": "Revert reason",
        "the_revert_reason_of_the_transaction": "The revert reason of the transaction",
        "number_of_the_block_in_which_the_transaction_is_recorded_block_confirmations_indicate_how_many_blocks_have_been_added_since_the_transaction_was_produced": "Number of the block in which the transaction is recorded. Block confirmations indicate how many blocks have been added since the transaction was produced",
        "the_date_and_time_at_which_a_transaction_is_produced": "The date and time at which a transaction is produced",
        "memo": "Memo",
        "transaction_memo_is_included_in_onchain_data": "Transaction memo is included in onchain data",
        "block_confirmations": "Block confirmations",
        "amount_paid_to_process_the_transaction_in_sei_and_fiat_value": "Amount paid to process the transaction in Sei and fiat value",
        "price_per_unit_of_gas_specified_by_the_sender_higher_gas_prices_can_prioritize_transaction_inclusion_during_times_of_high_usage": "Price per unit of gas specified by the sender. Higher gas prices can prioritize transaction inclusion during times of high usage",
        "actual_gas_amount_used_by_the_transaction": "Actual gas amount used by the transaction",
        "gas_fees_nsei": "Gas fees (nsei)",
        "the_gas_fees_of_transaction": "The gas fees of transaction",
        "base": "Base",
        "max_priority": "Max priority",
        "raw_input": "Raw input",
        "binary_data_included_with_the_transaction_see_logs_tab_for_additional_info": "Binary data included with the transaction. See logs tab for additional info",
        "decoded_input_data": "Decoded input data",
        "decoded_input_data_hint": "Decoded input data",
        "other_data_related_to_transaction": "Other data related to transaction",
        "name": "Name",
        "type": "Type",
        "data": "Data"
      },
      "token_transfers_tab_content": {
        "asset_type": "Asset type",
        "all": "All",
        "total_items_found": "Total {count} items found",
        "first": "First",
        "token": "Token",
        "type_&_method": "Type & Method",
        "quantity": "Quantity",
        "item": "Item",
        "from_to": "From/To",
        "value": "Value",
        "wrapped_sei": "Wrapped SEI",
        "erc_721": "ERC-721",
        "token_transfer": "Token transfer",
        "token_minting": "Token minting",
        "transaction_type": "Transaction",
        "name_of_token_long_text": "NAME of TOKEN long text",
        "imt": "SEI",
        "native_coin": "NATIVE COIN"
      },
      "internal_txns_tab_content": {
        "total_items_found": "Total {count} items found",
        "first": "First",
        "type": "Type",
        "from": "From",
        "to": "To",
        "value_sei": "Value SEI",
        "gas_limit": "Gas limit",
        "call_type": "Call",
        "delegate_call_type": "Delegate call",
        "success": "Success"
      },
      "logs_tab_content": {
        "address": "Address",
        "decode_input_data": "Decode input data",
        "method_id": "Method ID",
        "call": "Call",
        "name": "Name",
        "type": "Type",
        "indexed": "Indexed?",
        "data": "Data",
        "topic": "Topic",
        "hex_value": "Hex",
        "there_are_no_logs_for_this_transaction": "There are no logs for this transaction"
      },
      "state_tab_content": {
        "a_set_of_information_represents_the_current_state_is_updated_when_a_transaction_takes_place_on_the_network_the_below_is_a_summary_of_those_changes": "A set of information that represents the current state is updated when a transaction takes place on the network. The below is a summary of those changes.",
        "total_items_found": "Total {count} items found",
        "first": "First",
        "type": "Type",
        "address": "Address",
        "before": "Before",
        "after": "After",
        "change": "Change",
        "item": "Item",
        "validator": "Validator",
        "there_are_no_state_changes_for_this_transaction": "There are no state changes for this transaction"
      }
    },
    "native_cosmos_details": {
      "context_label": "Native Cosmos",
      "this_is_a_devnet_transaction_only": "This is a devnet transaction only",
      "details_tab_content": {
        "transaction_hash": "Transaction hash",
        "status_and_method": "Status and method",
        "block": "Block",
        "timestamp": "Timestamp",
        "memo": "Memo",
        "relayed_by_anyname": "Relayed by anyname",
        "signers": "Signers",
        "message_get_reward": "Message: Get Reward",
        "grantor": "Grantor",
        "delegator_address": "Delegator Address",
        "validator_address": "Validator Address",
        "grantee": "Grantee",
        "type_field": "Type",
        "basic": "Basic",
        "code_id": "Code ID",
        "byte_code": "Byte Code",
        "spend_limit": "Spend Limit",
        "expiration": "Expiration",
        "event_logs": "Event Logs",
        "show_all_events": "Show all events",
        "message_function_name": "Message: Function name",
        "value": "Value",
        "transaction_fee": "Transaction fee",
        "gas_price": "Gas price",
        "gas_usage_limit_by_txn": "Gas usage & limit by txn",
        "sender": "Sender",
        "type": "Type",
        "message": "Message"
      },
      "token_transfers_tab_content": {
        "token_transfers_label": "Token transfers"
      },
      "logs_tab_content": {
        "logs_label": "Logs"
      }
    }
  },
  "blocks_page": {
    "blocks": "Blocks",
    "block_height": "Block height",
    "block_time": "Block time",
    "first": "First",
    "table_headers": {
      "block": "Block",
      "validator": "Validator",
      "txn_count": "Txn Count",
      "gas_used": "Gas used",
      "reward_sei": "Reward SEI",
      "no_blocks": "There are no blocks"
    },
    "time_indicator": "secs ago",
    "awaiting_transactions_indexing": "Awaiting transactions indexing..."
  },
  "block_details_page": {
    "header_section": {
      "block": "Block",
      "validated_by": "Validated by",
      "validator_name": "Validator name",
      "delegate_button": "Delegate"
    },
    "main_navigation_tabs": {
      "details": "Details",
      "transactions": "Transactions"
    },
    "details_tab_content": {
      "txn_fees": "Txn fees",
      "static_block_reward": "Static block reward",
      "transaction_s": "transaction{{plural}}",
      "%_of_gas_target": "% of Gas Target",
      "block_height": "Block height",
      "size": "Size",
      "timestamp": "Timestamp",
      "transactions_link_count": "Transactions",
      "validated_by_field": "Validated by",
      "block_reward": "Block reward",
      "gas_usage": "Gas usage",
      "gas_limit": "Gas limit",
      "base_fee_per_gas": "Base fee per gas",
      "hash": "Hash",
      "parent_hash": "Parent hash",
      "mins_ago": "mins ago",
      "transactions": "Transactions",
      "genesis_block": "Genesis Block",
      "validated_by": "Validated by",
      "size_of_the_block_in_bytes": "Size of the block in bytes",
      "date_time_at_which_block_was_produced": "Date & time at which block was produced",
      "the_number_of_transactions_in_the_block": "The number of transactions in the block",
      "minimum_gas_price": "Minimum gas price",
      "a_block_producer_who_successfully_included_the_block_onto_the_blockchain": "A block producer who successfully included the block onto the blockchain",
      "for_each_block_the_validator_is_rewarded_with_a_finite_amount_of_sei_on_top_of_the_fees_paid_for_all_transactions_in_the_block": "For each block, the Validator is rewarded with a finite amount of SEI on top of the fees paid for all transactions in the block",
      "amount_of_distributed_reward_validators_receive_a_static_block_reward_tx_fees_uncle_fees": "Amount of distributed reward. Validators receive a static block reward + Tx fees + uncle fees",
      "the_total_gas_amount_used_in_the_block_and_its_percentage_of_gas_filled_in_the_block": "The total gas amount used in the block and its percentage of gas filled in the block",
      "total_gas_limit_provided_by_all_transactions_in_the_block": "Total gas limit provided by all transactions in the block",
      "minimum_fee_required_per_unit_of_gas_fee_adjusts_based_on_network_congestion": "Minimum fee required per unit of gas. Fee adjusts based on network congestion",
      "the_sha256_hash_of_the_block": "The SHA256 hash of the block",
      "the_hash_of_the_block_from_which_this_block_was_generated": "The hash of the block from which this block was generated",
      "the_minimum_gas_price_a_transaction_should_have_in_order_to_be_included_in_this_block": "The minimum gas price a transaction should have in order to be included in this block"
    },
    "transactions_tab_content": {
      "sub_tabs": {
        "evm_tab": "EVM",
        "evm_count_badge": "{count}",
        "native_cosmos_tab": "Native Cosmos",
        "native_cosmos_count_badge": "{count}"
      },
      "common_table_elements": {
        "total_items_found": "Total {count} items found",
        "first": "First",
        "trx_hash": "Trx hash",
        "status": "Status",
        "type_and_method": "Type & Method",
        "from_to": "From/To",
        "value_sei": "Value SEI",
        "fee_sei": "Fee SEI",
        "secs_ago": "secs ago",
        "success_status": "Success",
        "failed_status": "Failed"
      },
      "observed_type_and_method_values": {
        "coin_transfer": "Coin transfer",
        "contract_call": "Contract call",
        "transaction_type": "Transaction",
        "token_transfer": "Token transfer"
      },
      "associated_trx_hash_label": "Associated trx hash"
    }
  },
  "top_accounts_page": {
    "title": "Top Accounts",
    "by_sei_balance": "by SEI balance",
    "tabs": {
      "evm": "EVM",
      "native_cosmos": "Native Cosmos"
    },
    "table_headers": {
      "rank": "Rank",
      "address": "Address",
      "associated": "Associated",
      "balance_sei": "Balance SEI",
      "txn_count": "Txn count"
    },
    "associated_values": {
      "no": "No",
      "yes": "Yes"
    }
  },
  "validators_page": {
    "page_title": "Validators",
    "delegate": "Delegate",
    "stats": {
      "bonded_token": "Bonded token",
      "total_rewards": "Total rewards",
      "avg_apr": "Avg APR",
      "total_validators": "Total validators",
      "bonded_token_ratio": "Bonded token ratio",
      "last_block_rewards": "Last block rewards",
      "highest_apr": "Highest APR",
      "total_delegators": "Total delegators"
    },
    "search_by_validator_name_or_delegator_address": "Search by validator name or delegator address",
    "tabs": {
      "validators": "Validators",
      "delegations": "Delegations",
      "delegators": "Delegators"
    },
    "validators": {
      "label": "Status",
      "active_option": "Active",
      "inactive_option": "Inactive",
      "jailed_option": "Jailed",
      "validator": "Validator",
      "the_more_sei_delegated_to_a_validator_the_higher_the_validator's_voting_power": "The more SEI delegated to a validator, the higher the validator's voting power",
      "voting_power": "Voting power",
      "apr": "APR",
      "commission": "Commission",
      "participation": "Participation",
      "uptime": "Uptime",
      "the_proportion_of_staking_reward_being_taken_by_the_validator_as_a_commission": "The proportion of staking reward being taken by the validator as a commission",
      "the_rate_is_participation_rate_over_all": "The Rate is Participation rate over all",
      "validator's_availability": "Validator's availability"
    },
    "delegations": {
      "tabs": {
        "delegations": "Delegations",
        "un_delegations": "Un-delegations",
        "re_delegations": "Re-delegations"
      },
      "delegations": {
        "validator": "Validator",
        "delegator": "Delegator",
        "amount": "Amount",
        "transaction": "Transaction",
        "age": "Age"
      },
      "un_delegations": {
        "validator": "Validator",
        "delegator": "Delegator",
        "amount": "Amount",
        "transaction": "Transaction",
        "age": "Age"
      },
      "re_delegations": {
        "note": "Notes: Re-delegation is the process that allows you to move your staked tokens from one validator to another",
        "delegator": "Delegator",
        "from_validator": "From validator",
        "to_validator": "To validator",
        "amount": "Amount",
        "transaction": "Transaction",
        "age": "Age"
      }
    },
    "delegators": {
      "delegator": "Delegator",
      "validators": "Validators",
      "percentage": "Percentage",
      "stake_amount": "Stake amount",
      "stake_txs": "Stake txs",
      "the_delegator's_total_stake_across_all_validators_as_a_percentage_of_all_token_staked_from_all_delegators": "The delegator's total stake (across all validators) as a percentage of all token staked from all delegators"
    }
  },
  "validator_page": {
    "page_title": "Validator details",
    "delegate": "Delegate",
    "summary": {
      "status_active": "Active",
      "delegate_button": "Delegate",
      "apr": "APR",
      "account": "Account",
      "operator": "Operator",
      "consensus": "Consensus",
      "hex": "Hex",
      "vote_power": "Vote power",
      "percentage": "Percentage",
      "website": "Website",
      "details": "Details",
      "annual_percentage_rate_the_yearly_return_on_staked_tokens_excluding_compounding": "Annual Percentage Rate: The yearly return on staked tokens, excluding compounding"
    },
    "tabs": {
      "overview": "Overview",
      "bonded_token_change": "Bonded Token Change",
      "delegators": "Delegators",
      "votes": "Votes",
      "proposed_blocks": "Proposed Blocks"
    },
    "overview": {
      "statics": "Statics",
      "self_bonded": "Self Bonded",
      "delegators_bonded": "Delegators Bonded",
      "commission": "Commission",
      "max_rate": "Max. rate",
      "max_change_rate": "Max. Change Rate",
      "lock_period": "Lock period",
      "uptime": "Uptime",
      "window_uptime": "Window uptime",
      "signed_legend": "Signed",
      "proposed_legend": "Proposed",
      "missed_legend": "Missed"
    },
    "bonded_token_change": {
      "tabs": {
        "delegations": "Delegations",
        "un_delegations": "Un-delegations",
        "re_delegations": "Re-delegations"
      },
      "trx_hash": "Trx hash",
      "delegator_address": "Delegator address",
      "amount_sei": "Amount SEI",
      "note": "Notes: Re-delegation is the process that allows you to move your staked tokens from one validator to another",
      "delegator": "Delegator",
      "from_validator": "From validator",
      "to_validator": "To validator",
      "amount": "Amount",
      "transaction": "Transaction",
      "age": "Age"
    },
    "delegators": {
      "delegator": "Delegator",
      "validators": "Validators",
      "stake_amount": "Stake amount",
      "percentage": "Percentage",
      "value": "Value",
      "stake_txs": "Stake txs"
    },
    "votes": {
      "search_by_proposal_id_or_proposal_title": "Search by proposal ID or proposal title",
      "proposal_id": "Proposal ID",
      "proposal_title_types": "Proposal Title/Types",
      "trx_hash": "Trx hash",
      "vote_answer": "Vote answer",
      "status": "Status",
      "software_upgrade_proposal": "SoftwareUpgradeProposal",
      "text_proposal": "TextProposal",
      "yes": "Yes",
      "did_not_vote": "Did not vote",
      "passed": "Passed",
      "deposit_failed": "Deposit Failed",
      "rejected": "Rejected"
    },
    "proposed_blocks": {
      "block": "Block",
      "txn_count": "Txn Count",
      "gas_used": "Gas Used",
      "reward_sei": "Reward SEI"
    }
  },
  "evm_verified_contracts_page": {
    "page_title": "Verified contracts",
    "evm_only": "EVM only",
    "total_contracts": "Total contracts",
    "verified_contracts": "Verified contracts",
    "compiler": "Compiler",
    "search_by_contract_name_or_address": "Search by contract name or address",
    "contract": "Contract",
    "balance_sei": "Balance SEI",
    "txs": "Txs",
    "compiler_version": "Compiler / version",
    "verified": "Verified"
  },
  "token": {
    "tokens": "Tokens",
    "erc_20": "ERC-20",
    "cw_20": "CW-20",
    "ibc_tokens": "IBC tokens",
    "ibc_token": "IBC token",
    "native_tokens": "Native tokens",
    "native_token": "Native token",
    "search_by_token_name_or_symbol_or_address": "Search by token name or symbol or address",
    "token": "Token",
    "pointer_original_contract": "Pointer/original contract",
    "on_chain_marketcap": "On-chain marketcap",
    "holders": "Holders",
    "token_transfers": "Token transfers",
    "trx_hash": "Trx hash",
    "type_and_method": "Type & Method",
    "from": "From",
    "to": "To",
    "quantity": "Quantity",
    "percentage": "Percentage",
    "value": "Value",
    "chart": "Chart",
    "verify_and_publish_button": "Verify & publish",
    "contract_creation_code_header": "Contract creation code",
    "deployed_bytecode_header": "Deployed bytecode",
    "code": "Code",
    "read_contract": "Read contract",
    "write_contract": "Write contract",
    "connected_to": "Connected to",
    "contract_information": "Contract information",
    "original": "Original",
    "pointer": "Pointer",
    "switch_to_pointer_link": "Switch to Pointer {}",
    "switch_to_original_link": "Switch to Original {}",
    "overview": "Overview",
    "price": "Price",
    "fully_market_cap": "Fully marketcap",
    "max_total_supply": "Max total supply",
    "holders_count": "Holders count",
    "transfers_count": "Transfers count",
    "more_information": "More information",
    "decimals": "Decimals",
    "nft_type": "NFT type",
    "collection": "Collection",
    "items": "Items",
    "search_placeholder": "Search by collection name or address",
    "official_website": "Official website",
    "social_profiles": "Social profiles",
    "inventory": "Inventory",
    "nft_transfers": "NFT transfers",
    "contract": "Contract",
    "token_id": "Token ID",
    "transaction": "Transaction",
    "token_minting": "Token minting",
    "minted": "Minted",
    "coming_soon": "Coming soon",
    "price_per_token_on_the_exchanges": "Price per token on the exchanges",
    "total_supply_mul_price": "Total supply * Price",
    "the_total_amount_of_tokens_issued": "The total amount of tokens issued",
    "the_sum_of_total_quantities_per_token_id": "The sum of total quantities per Token ID",
    "number_of_accounts_holding_the_token": "Number of accounts holding the token",
    "number_of_transfers_for_the_token": "Number of transfers for the token",
    "transfers": "Transfers",
    "number_of_digits_that_come_after_the_decimal_place_when_displaying_token_value": "Number of digits that come after the decimal place when displaying token value",
    "the_official_website_of_the_project": "The official website of the project",
    "the_social_profiles_of_the_project": "The social profiles of the project",
    "the_pointer_address_is_a_smart_contract_where_the_tokens_nfts_are_managed_on_the_parallel_blockchain_by_calling_from_its_original_contract": "The Pointer address is a smart contract where the Tokens/NFTs are managed on the parallel blockchain by calling from its Original Contract",
    "original_is_a_smart_contract_or_a_hash_identifying_tokens_nfts_that_are_originally_created_and_directly_managed_on_its_blockchain": "Original is a smart contract or a hash identifying Tokens/NFTs that are originally created and directly managed on its blockchain",
    "the_contract_address_of_token": "The contract address of token",
    "a_unique_identifier_for_the_factory_token_generated_from_specific_information_related_to_the_token": "A unique identifier for the Factory token, generated from specific information related to the token",
    "original_is_a_hash_identifying_tokens_that_are_originally_created_and_directly_managed_on_its_blockchain": "Original is a hash identifying Tokens that are originally created and directly managed on its blockchain",
    "the_pointer_address_is_a_smart_contract_where_the_tokens_are_managed_on_the_parallel_blockchain_by_calling_from_its_factory_token": "The Pointer address is a smart contract where the Tokens are managed on the parallel blockchain by calling from its Factory token",
    "the_route_the_token_uses_to_travel_through_the_network_including_details_about_the_port_and_channel_used": "The route the token uses to travel through the network, including details about the port and channel used.",
    "hash": "Hash",
    "path": "Path",
    "the_pointer_address_is_a_smart_contract_where_the_tokens_are_managed_on_the_parallel_blockchain_by_calling_from_its_ibc_token": "The Pointer address is a smart contract where the Tokens are managed on the parallel blockchain by calling from its IBC token",
    "filtered_by_owner": "Filtered by owner",
    "owner": "Owner",
    "associated": "Associated",
    "null_address_tokens_sent_here_are_burned_forever": "Null Address - Tokens sent here are burned forever",
    "token_may_be_burned_or_owner_data_needs_refresh": "Token may be burned or owner data needs refresh",
    "item_activities": "Item activities",
    "metadata": "Metadata",
    "there_is_no_metadata_for_this_nft": "There is no metadata for this NFT",
    "name": "Name",
    "the_name_of_nft": "The name of NFT",
    "creator": "Creator",
    "address_that_deployed_this_token_contract": "Address that deployed this token contract",
    "current_owner_of_this_nft": "Current owner of this NFT",
    "the_contract_address_that_handle_this_nft": "The contract address that handle this NFT",
    "the_unique_id_of_this_nft_on_collection": "The unique ID of this NFT on collection",
    "original_is_a_smart_contract_identifying_tokens_nfts_that_are_originally_created_and_directly_managed_on_its_blockchain": "Original is a smart contract identifying Tokens/NFTs that are originally created and directly managed on its blockchain",
    "the_pointer_address_is_a_smart_contract_where_the_nfts_are_managed_on_the_parallel_blockchain_by_calling_from_its_original_contract": "The Pointer address is a smart contract where the NFTs are managed on the parallel blockchain by calling from its Original",
    "activities": "Activities",
    "number_of_transfers_for_the_token_instance": "Number of transfers for the token instance",
    "evm_address": "EVM address",
    "the_evm_address_of_token_owner": "The EVM address of token owner",
    "native_address": "Native address",
    "the_native_address_of_token_owner": "The Native address of token owner",
    "properties": "Properties",
    "description": "Description",
    "unnamed_token": "Unnamed Token",
    "reputation_ok": "Reputation OK: evaluated to be a token of public interest by 1Mscan",
    "reputation_unsafe": "Reputation UNSAFE: User discretion is advised if interacting with this token",
    "reputation_unknown": "Reputation UNKNOWN: Verify that this is the token you intended to interact with",
    "reputation_neutral": "Reputation NEUTRAL: Some information on this token has been verified by 1Mscan",
    "type": "Type",
    "nfts_type": "NFTs type",
    "search_by_collection_name_or_address": "Search by collection name or address",
    "nfts": "NFTs"
  },
  "wallet_profile_page": {
    "track_your_sei_wallet_s_assets_from_native_tokens_to_nfts_all_in_one_profile_view": "Track your SEI wallet's assets - from native tokens to NFTs - all in one profile view",
    "address": "Address",
    "your_evm_wallet": "Your EVM wallet",
    "associated_with": "Associated with",
    "not_associated_yet_link_now": "Not associated yet, link now",
    "search_by_token_name_or_symbol_or_address": "Search by token name or symbol or address",
    "your_sei_wallet": "Your SEI wallet"
  },
  "profile_checker_page": {
    "page_title": "Profile checker",
    "discover_any_wallet_s_assets_on_sei_blockchain_from_tokens_to_nft_collections": "Discover any wallet's assets on SEI blockchain - from tokens to NFT collections",
    "input_a_wallet_address_and_check_its_profile": "Input a wallet address and check it's profile",
    "enter_wallet_address_0x_or_sei": "Enter wallet address (0x.../ sei...)",
    "check_profile": "Check profile",
    "wait": "Wait",
    "tokens": "Tokens",
    "nfts": "NFTs",
    "search_by_token_name_or_symbol_or_address": "Search by token name or symbol or address",
    "please_wait": "Please wait",
    "between_searches": "between searches",
    "address_is_required": "Address is required",
    "invalid_address": "Invalid address"
  },
  "address": {
    "logs": "Logs",
    "contract": "Contract",
    "internal_txns": "Internal txns",
    "account_details": "Account details",
    "contract_details": "Contracts details",
    "overview": "Overview",
    "sei_balance": "SEI Balance",
    "token_holdings": "Token holdings",
    "transactions": "Transactions",
    "transfers": "Transfers",
    "gas_used": "Gas used",
    "last_balance_update": "Last balance update",
    "search_placeholder": "Search by token name and symbol",
    "see_more": "See more",
    "addresses": "Addresses",
    "token_transfers": "Token transfers",
    "asset_transaction_type": "Asset transaction type",
    "outgoing_transaction": "Outgoing transaction",
    "incoming_transaction": "Incoming transaction",
    "export_csv": "Export CSV",
    "trx_hash": "Trx hash",
    "status": "Status",
    "type_&_method": "Type & Method",
    "block": "Block",
    "from_to": "From/To",
    "value_sei": "Value SEI",
    "fee_sei": "Fee SEI",
    "transfer_type": "Transfer type",
    "outgoing_transfers": "Outgoing transfers",
    "incoming_transfers": "Incoming transfers",
    "asset_type": "Asset type",
    "token": "Token",
    "item": "Item",
    "quantity": "Quantity",
    "asset": "Asset",
    "contract_address": "Contract Address",
    "denom": "Denom",
    "price": "Price",
    "value": "Value",
    "internal_transactions_are_specific_to_evm_compatible": "Internal transactions are specific to EVM-compatible",
    "parent_trx_hash": "Parent trx hash",
    "type": "Type",
    "verify_&_publish": "Verify & publish",
    "contract_creation_code": "Contract creation code",
    "deployed_bytecode": "Deployed Bytecode",
    "code": "Code",
    "read_contract": "Read contract",
    "write_contract": "Write contract",
    "contract_information": "Contract infomation",
    "more_information": "More information",
    "token_name": "Token name",
    "contract_name": "Contract name",
    "validator_name": "Validator name",
    "creator": "Creator",
    "implementations": "Implementations",
    "contract_type": "Contract type",
    "code_id": "Code ID",
    "blocks_validated": "Blocks validated",
    "sei_balance_of_address": "SEI balance of address",
    "all_assets_and_total_value_of_this_account": "All assets and total value of this account",
    "number_of_transactions_related_to_this_address": "Number of transactions related to this address",
    "number_of_transfers_to_from_this_address": "Number of transfers to from this address",
    "number_of_blocks_validated_by_this_validator": "Number of blocks validated by this validator",
    "block_number_in_which_the_address_was_updated": "Block number in which the address was updated",
    "the_name_found_in_the_source_code_of_the_contract": "The name found in the source code of the Contract",
    "the_name_of_the_validator": "The name of the validator",
    "the_creator_of_this_contract_and_the_transaction_of_creation": "The creator of this contract & the transaction of creation",
    "the_name_of_the_contract": "The name of the contract",
    "the_name_of_the_token": "The name of the token",
    "gas_used_by_address_displayed_in_the_unit_asei_1_sei_10¹⁸_asei": "Gas used by address, displayed in the unit 'asei' (1 SEI = 10¹⁸ asei)",
    "token_name_and_symbol": "Token name and symbol",
    "implementation_addresses_of_the_proxy_contract": "Implementation addresses of the proxy contract",
    "defines_the_standard_and_functionality_for_tokens_or_assets_on_sei_blockchain": "Defines the standard and functionality for tokens or assets on SEI blockchain",
    "a_code_id_is_a_unique_identifier_assigned_to_a_wasm_binary_code_uploaded_to_the_blockchain_used_for_referencing_and_interacting_with_deployed_smart_contracts": "A 'Code ID' is a unique identifier assigned to a wasm binary code uploaded to the blockchain, used for referencing and interacting with deployed smart contracts",
    "the_evm_address_of_this_account": "The EVM Address of this account",
    "the_native_address_of_this_account": "The Native Address of this account",
    "link_now": "Link now",
    "not_associated_yet_link_now": "Not associated yet",
    "outgoing_transactions": "Outgoing transactions",
    "incoming_transactions": "Incoming transactions",
    "there_are_no_transactions": "There are no transactions",
    "there_are_no_logs_for_this_address": "There are no logs for this address",
    "decode_input_data": "Decode input data",
    "address": "Address",
    "to_see_accurate_decoded_input_data_the_contract_must_be_verified": "To see accurate decoded input data, the contract must be verified.",
    "topic": "Topic",
    "filtered_by_token": "Filtered by token",
    "qty": "Qty",
    "search_by_token_name_and_symbol": "Search by token name and symbol",
    "loading": "Loading",
    "could_not_find_any_matches": "Could not find any matches",
    "read_proxy": "Read proxy",
    "write_proxy": "Write proxy",
    "constructor_arguments": "Constructor arguments",
    "compiler_settings": "Compiler settings",
    "contract_abi": "Contract ABI",
    "contracts_that_self_destruct_in_their_constructors_have_no_contract_code_published_and_cannot_be_verified_displaying_the_init_data_provided_of_the_creating_transaction": "Contracts that self destruct in their constructors have no contract code published and cannot be verified. Displaying the init data provided of the creating transaction.",
    "minimal_proxy_contract_for": "Minimal Proxy Contract for",
    "minimal_bytecode_implementation_that_delegates_all_calls_to_a_known_address": "minimal bytecode implementation that delegates all calls to a known address",
    "contract_source_code_verified": "Contract Source Code Verified",
    "partial": "Partial",
    "exact": "Exact",
    "match": "Match",
    "warning_contract_bytecode_has_been_changed_and_does_not_match_the_verified_one_therefore_interaction_with_this_smart_contract_may_be_risky": "Warning! Contract bytecode has been changed and does not match the verified one. Therefore, interaction with this smart contract may be risky.",
    "contract_is_not_verified_however_we_found_a_verified_contract_with_the_same_bytecode_in_1mscan_db": "Contract is not verified. However, we found a verified contract with the same bytecode in 1Mscan DB",
    "all_functions_displayed_below_are_from_abi_of_that_contract_in_order_to_verify_current_contract_proceed_with": "All functions displayed below are from ABI of that contract. In order to verify current contract, proceed with",
    "page": "page",
    "write": "Write",
    "read": "Read",
    "collapse": "Collapse",
    "expand": "Expand",
    "all": "All",
    "reset": "Reset",
    "contract_source_code": "Contract source code",
    "schema_type": "Schema type",
    "json_format": "JSON Format",
    "jraw_text_format": "JRAW/Text Format",
    "select_one": "Select one",
    "the_fallback_function_is_executed_on_a_call_to_the_contract_if_none_of_the_other_functions_match_the_given_function_signature_or_if_no_data_was_supplied_at_all_and_there_is_no_receive_ether_function_the_fallback_function_always_receives_data_but_in_order_to_also_receive_ether_it_must_be_marked_payable": "The fallback function is executed on a call to the contract if none of the other functions match the given function signature, or if no data was supplied at all and there is no receive Ether function. The fallback function always receives data, but in order to also receive SEI it must be marked payable.",
    "the_receive_function_is_executed_on_a_call_to_the_contract_with_empty_calldata_this_is_the_function_that_is_executed_on_plain_ether_transfers_e_g_via_send_or_transfer_if_no_such_function_exists_but_a_payable_fallback_function_exists_the_fallback_function_will_be_called_on_a_plain_ether_transfer_if_neither_a_receive_ether_nor_a_payable_fallback_function_is_present_the_contract_cannot_receive_ether_through_regular_transactions_and_throws_an_exception": "The receive function is executed on a call to the contract with empty calldata. This is the function that is executed on plain SEI transfers (e.g. via .send() or .transfer()). If no such function exists, but a payable fallback function exists, the fallback function will be called on a plain SEI transfer. If neither a receive Ether nor a payable fallback function is present, the contract cannot receive Ether through regular transactions and throws an exception.",
    "the_linked_library_s_source_code_may_not_be_the_real_one_check_the_source_code_at_the_library_address_if_any_if_you_want_to_be_sure_in_case_if_there_is_any_library_linked": "The linked library's source code may not be the real one. Check the source code at the library address (if any) if you want to be sure in case if there is any library linked",
    "external_libraries": "External libraries",
    "redactors": "Redactors",
    "open_in": "Open in",
    "at_txn": "at txn"
  }
}
